// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListProductsParams creates a new ListProductsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListProductsParams() *ListProductsParams {
	return &ListProductsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListProductsParamsWithTimeout creates a new ListProductsParams object
// with the ability to set a timeout on a request.
func NewListProductsParamsWithTimeout(timeout time.Duration) *ListProductsParams {
	return &ListProductsParams{
		timeout: timeout,
	}
}

// NewListProductsParamsWithContext creates a new ListProductsParams object
// with the ability to set a context for a request.
func NewListProductsParamsWithContext(ctx context.Context) *ListProductsParams {
	return &ListProductsParams{
		Context: ctx,
	}
}

// NewListProductsParamsWithHTTPClient creates a new ListProductsParams object
// with the ability to set a custom HTTPClient for a request.
func NewListProductsParamsWithHTTPClient(client *http.Client) *ListProductsParams {
	return &ListProductsParams{
		HTTPClient: client,
	}
}

/*
ListProductsParams contains all the parameters to send to the API endpoint

	for the list products operation.

	Typically these are written to a http.Request.
*/
type ListProductsParams struct {

	/* Page.

	   The Page is page which user want retrieve

	   Format: int64
	*/
	Page *int64

	/* PageSize.

	   The PageSize is total items of one page

	   Format: int64
	*/
	PageSize *int64

	/* Sort.

	   The sort
	*/
	Sort []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list products params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProductsParams) WithDefaults() *ListProductsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list products params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListProductsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list products params
func (o *ListProductsParams) WithTimeout(timeout time.Duration) *ListProductsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list products params
func (o *ListProductsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list products params
func (o *ListProductsParams) WithContext(ctx context.Context) *ListProductsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list products params
func (o *ListProductsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list products params
func (o *ListProductsParams) WithHTTPClient(client *http.Client) *ListProductsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list products params
func (o *ListProductsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPage adds the page to the list products params
func (o *ListProductsParams) WithPage(page *int64) *ListProductsParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the list products params
func (o *ListProductsParams) SetPage(page *int64) {
	o.Page = page
}

// WithPageSize adds the pageSize to the list products params
func (o *ListProductsParams) WithPageSize(pageSize *int64) *ListProductsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the list products params
func (o *ListProductsParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithSort adds the sort to the list products params
func (o *ListProductsParams) WithSort(sort []string) *ListProductsParams {
	o.SetSort(sort)
	return o
}

// SetSort adds the sort to the list products params
func (o *ListProductsParams) SetSort(sort []string) {
	o.Sort = sort
}

// WriteToRequest writes these params to a swagger request
func (o *ListProductsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Page != nil {

		// query param page
		var qrPage int64

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.Sort != nil {

		// binding items for sort
		joinedSort := o.bindParamSort(reg)

		// query array param sort
		if err := r.SetQueryParam("sort", joinedSort...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamListProducts binds the parameter sort
func (o *ListProductsParams) bindParamSort(formats strfmt.Registry) []string {
	sortIR := o.Sort

	var sortIC []string
	for _, sortIIR := range sortIR { // explode []string

		sortIIV := sortIIR // string as string
		sortIC = append(sortIC, sortIIV)
	}

	// items.CollectionFormat: ""
	sortIS := swag.JoinByFormat(sortIC, "")

	return sortIS
}
