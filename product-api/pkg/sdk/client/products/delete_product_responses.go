// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/codewithhoa/building-microservice-with-go/product-api/pkg/sdk/models"
)

// DeleteProductReader is a Reader for the DeleteProduct structure.
type DeleteProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteProductNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteProductBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteProductInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteProductDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteProductNoContent creates a DeleteProductNoContent with default headers values
func NewDeleteProductNoContent() *DeleteProductNoContent {
	return &DeleteProductNoContent{}
}

/*
DeleteProductNoContent describes a response with status code 204, with default header values.

successful operation and no data to return.
*/
type DeleteProductNoContent struct {
}

// IsSuccess returns true when this delete product no content response has a 2xx status code
func (o *DeleteProductNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete product no content response has a 3xx status code
func (o *DeleteProductNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product no content response has a 4xx status code
func (o *DeleteProductNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product no content response has a 5xx status code
func (o *DeleteProductNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product no content response a status code equal to that given
func (o *DeleteProductNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete product no content response
func (o *DeleteProductNoContent) Code() int {
	return 204
}

func (o *DeleteProductNoContent) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNoContent ", 204)
}

func (o *DeleteProductNoContent) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNoContent ", 204)
}

func (o *DeleteProductNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteProductBadRequest creates a DeleteProductBadRequest with default headers values
func NewDeleteProductBadRequest() *DeleteProductBadRequest {
	return &DeleteProductBadRequest{}
}

/*
DeleteProductBadRequest describes a response with status code 400, with default header values.

invalid ID supplied
*/
type DeleteProductBadRequest struct {
	Payload *models.ErrorResponses
}

// IsSuccess returns true when this delete product bad request response has a 2xx status code
func (o *DeleteProductBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product bad request response has a 3xx status code
func (o *DeleteProductBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product bad request response has a 4xx status code
func (o *DeleteProductBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete product bad request response has a 5xx status code
func (o *DeleteProductBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product bad request response a status code equal to that given
func (o *DeleteProductBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete product bad request response
func (o *DeleteProductBadRequest) Code() int {
	return 400
}

func (o *DeleteProductBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProductBadRequest) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteProductBadRequest) GetPayload() *models.ErrorResponses {
	return o.Payload
}

func (o *DeleteProductBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponses)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductNotFound creates a DeleteProductNotFound with default headers values
func NewDeleteProductNotFound() *DeleteProductNotFound {
	return &DeleteProductNotFound{}
}

/*
DeleteProductNotFound describes a response with status code 404, with default header values.

not found error
*/
type DeleteProductNotFound struct {
	Payload *models.ErrorResponses
}

// IsSuccess returns true when this delete product not found response has a 2xx status code
func (o *DeleteProductNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product not found response has a 3xx status code
func (o *DeleteProductNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product not found response has a 4xx status code
func (o *DeleteProductNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete product not found response has a 5xx status code
func (o *DeleteProductNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete product not found response a status code equal to that given
func (o *DeleteProductNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete product not found response
func (o *DeleteProductNotFound) Code() int {
	return 404
}

func (o *DeleteProductNotFound) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotFound  %+v", 404, o.Payload)
}

func (o *DeleteProductNotFound) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductNotFound  %+v", 404, o.Payload)
}

func (o *DeleteProductNotFound) GetPayload() *models.ErrorResponses {
	return o.Payload
}

func (o *DeleteProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponses)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductInternalServerError creates a DeleteProductInternalServerError with default headers values
func NewDeleteProductInternalServerError() *DeleteProductInternalServerError {
	return &DeleteProductInternalServerError{}
}

/*
DeleteProductInternalServerError describes a response with status code 500, with default header values.

internal error occur in server
*/
type DeleteProductInternalServerError struct {
	Payload *models.ErrorResponses
}

// IsSuccess returns true when this delete product internal server error response has a 2xx status code
func (o *DeleteProductInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete product internal server error response has a 3xx status code
func (o *DeleteProductInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete product internal server error response has a 4xx status code
func (o *DeleteProductInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete product internal server error response has a 5xx status code
func (o *DeleteProductInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete product internal server error response a status code equal to that given
func (o *DeleteProductInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete product internal server error response
func (o *DeleteProductInternalServerError) Code() int {
	return 500
}

func (o *DeleteProductInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProductInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProductInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteProductInternalServerError) GetPayload() *models.ErrorResponses {
	return o.Payload
}

func (o *DeleteProductInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponses)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteProductDefault creates a DeleteProductDefault with default headers values
func NewDeleteProductDefault(code int) *DeleteProductDefault {
	return &DeleteProductDefault{
		_statusCode: code,
	}
}

/*
DeleteProductDefault describes a response with status code -1, with default header values.

successful operation and no data to return.
*/
type DeleteProductDefault struct {
	_statusCode int
}

// IsSuccess returns true when this delete product default response has a 2xx status code
func (o *DeleteProductDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete product default response has a 3xx status code
func (o *DeleteProductDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete product default response has a 4xx status code
func (o *DeleteProductDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete product default response has a 5xx status code
func (o *DeleteProductDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete product default response a status code equal to that given
func (o *DeleteProductDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete product default response
func (o *DeleteProductDefault) Code() int {
	return o._statusCode
}

func (o *DeleteProductDefault) Error() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProduct default ", o._statusCode)
}

func (o *DeleteProductDefault) String() string {
	return fmt.Sprintf("[DELETE /products/{id}][%d] deleteProduct default ", o._statusCode)
}

func (o *DeleteProductDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
