// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/codewithhoa/building-microservice-with-go/product-api/pkg/sdk/models"
)

// PutProductReader is a Reader for the PutProduct structure.
type PutProductReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutProductReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPutProductNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutProductBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutProductNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutProductInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutProductDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutProductNoContent creates a PutProductNoContent with default headers values
func NewPutProductNoContent() *PutProductNoContent {
	return &PutProductNoContent{}
}

/*
PutProductNoContent describes a response with status code 204, with default header values.

successful operation and no data to return.
*/
type PutProductNoContent struct {
}

// IsSuccess returns true when this put product no content response has a 2xx status code
func (o *PutProductNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this put product no content response has a 3xx status code
func (o *PutProductNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put product no content response has a 4xx status code
func (o *PutProductNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this put product no content response has a 5xx status code
func (o *PutProductNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this put product no content response a status code equal to that given
func (o *PutProductNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the put product no content response
func (o *PutProductNoContent) Code() int {
	return 204
}

func (o *PutProductNoContent) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProductNoContent ", 204)
}

func (o *PutProductNoContent) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProductNoContent ", 204)
}

func (o *PutProductNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutProductBadRequest creates a PutProductBadRequest with default headers values
func NewPutProductBadRequest() *PutProductBadRequest {
	return &PutProductBadRequest{}
}

/*
PutProductBadRequest describes a response with status code 400, with default header values.

internal error occur in server
*/
type PutProductBadRequest struct {
	Payload *models.ErrorResponses
}

// IsSuccess returns true when this put product bad request response has a 2xx status code
func (o *PutProductBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put product bad request response has a 3xx status code
func (o *PutProductBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put product bad request response has a 4xx status code
func (o *PutProductBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this put product bad request response has a 5xx status code
func (o *PutProductBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this put product bad request response a status code equal to that given
func (o *PutProductBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the put product bad request response
func (o *PutProductBadRequest) Code() int {
	return 400
}

func (o *PutProductBadRequest) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProductBadRequest  %+v", 400, o.Payload)
}

func (o *PutProductBadRequest) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProductBadRequest  %+v", 400, o.Payload)
}

func (o *PutProductBadRequest) GetPayload() *models.ErrorResponses {
	return o.Payload
}

func (o *PutProductBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponses)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProductNotFound creates a PutProductNotFound with default headers values
func NewPutProductNotFound() *PutProductNotFound {
	return &PutProductNotFound{}
}

/*
PutProductNotFound describes a response with status code 404, with default header values.

not found error
*/
type PutProductNotFound struct {
	Payload *models.ErrorResponses
}

// IsSuccess returns true when this put product not found response has a 2xx status code
func (o *PutProductNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put product not found response has a 3xx status code
func (o *PutProductNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put product not found response has a 4xx status code
func (o *PutProductNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this put product not found response has a 5xx status code
func (o *PutProductNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this put product not found response a status code equal to that given
func (o *PutProductNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the put product not found response
func (o *PutProductNotFound) Code() int {
	return 404
}

func (o *PutProductNotFound) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProductNotFound  %+v", 404, o.Payload)
}

func (o *PutProductNotFound) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProductNotFound  %+v", 404, o.Payload)
}

func (o *PutProductNotFound) GetPayload() *models.ErrorResponses {
	return o.Payload
}

func (o *PutProductNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponses)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProductInternalServerError creates a PutProductInternalServerError with default headers values
func NewPutProductInternalServerError() *PutProductInternalServerError {
	return &PutProductInternalServerError{}
}

/*
PutProductInternalServerError describes a response with status code 500, with default header values.

internal error occur in server
*/
type PutProductInternalServerError struct {
	Payload *models.ErrorResponses
}

// IsSuccess returns true when this put product internal server error response has a 2xx status code
func (o *PutProductInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this put product internal server error response has a 3xx status code
func (o *PutProductInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this put product internal server error response has a 4xx status code
func (o *PutProductInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this put product internal server error response has a 5xx status code
func (o *PutProductInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this put product internal server error response a status code equal to that given
func (o *PutProductInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the put product internal server error response
func (o *PutProductInternalServerError) Code() int {
	return 500
}

func (o *PutProductInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProductInternalServerError  %+v", 500, o.Payload)
}

func (o *PutProductInternalServerError) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProductInternalServerError  %+v", 500, o.Payload)
}

func (o *PutProductInternalServerError) GetPayload() *models.ErrorResponses {
	return o.Payload
}

func (o *PutProductInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponses)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutProductDefault creates a PutProductDefault with default headers values
func NewPutProductDefault(code int) *PutProductDefault {
	return &PutProductDefault{
		_statusCode: code,
	}
}

/*
PutProductDefault describes a response with status code -1, with default header values.

successful operation and no data to return.
*/
type PutProductDefault struct {
	_statusCode int
}

// IsSuccess returns true when this put product default response has a 2xx status code
func (o *PutProductDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this put product default response has a 3xx status code
func (o *PutProductDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this put product default response has a 4xx status code
func (o *PutProductDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this put product default response has a 5xx status code
func (o *PutProductDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this put product default response a status code equal to that given
func (o *PutProductDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the put product default response
func (o *PutProductDefault) Code() int {
	return o._statusCode
}

func (o *PutProductDefault) Error() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProduct default ", o._statusCode)
}

func (o *PutProductDefault) String() string {
	return fmt.Sprintf("[PUT /products/{id}][%d] putProduct default ", o._statusCode)
}

func (o *PutProductDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
